import{createRequire as u}from"node:module";import{escapeHtml as c}from"@mdit/helper";import{tex as y}from"@mdit/plugin-tex";const f=u(import.meta.url);let p=!0,l;try{l=(await import("katex")).default}catch{p=!1}const S=(r,e,n)=>{let t;try{t=l.renderToString(r,{...e,displayMode:!1})}catch(o){e.throwOnError&&console.warn(o),t=`<span class='katex-error' title='${c(o.toString())}'>${c(r)}</span>`}return n?.(t,!1)??t},$=(r,e,n)=>{let t;try{t=`<p class='katex-block'>${l.renderToString(r,{...e,displayMode:!0})}</p>
`}catch(o){e.throwOnError&&console.warn(o),t=`<p class='katex-block katex-error' title='${c(o.toString())}'>${c(r)}</p>
`}return n?.(t,!0)??t},I=(r,e={})=>{if(!p){console.error('[@mdit/plugin-katex]: "katex" not installed!');return}const{allowInlineWithSpace:n=!1,mathFence:t=!1,mhchem:o=!1,logger:m=a=>a==="newLineInDisplayMode"?"ignore":"warn",transformer:i,...h}=e;o&&f("katex/contrib/mhchem"),r.use(y,{allowInlineWithSpace:n,mathFence:t,render:(a,d,k)=>{const s={strict:(w,x,g)=>m(w,x,g,k)??"ignore",throwOnError:!1,...h};return d?$(a,s,i):S(a,s,i)}})};export{I as katex};
//# sourceMappingURL=index.js.map
